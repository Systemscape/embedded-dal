import { Button, GroupBox, SpinBox, ComboBox, CheckBox, LineEdit, TabWidget, VerticalBox, HorizontalBox,
    Slider, ProgressIndicator, SpinBox, StyleMetrics, Palette, Switch, Spinner, GridBox } from "std-widgets.slint";
import { GlobalSettings } from "../global_settings.slint";
import { Page } from "page.slint";


export global DashboardPageAdapter {
    in-out property <image> chart;

    pure callback render_plot(/* widht */ int, /* height */ int) -> image;
}

component OverviewButton inherits Rectangle {

    in property <string> text <=> label.text;
    in property <image> icon <=> icon.source;
    in property <brush> icon_color <=> icon.colorize;
    in property <int> page: 2;

    border-color: black;
    border-width: 2px;
    border-radius: 10px;

    preferred-height: 70px;
    min-width: 180px;

    background: area.has-hover ? Palette.alternate-background.mix(Palette.alternate-foreground, 0.9) : Palette.alternate-background;

    area := TouchArea {
        width: parent.width;
        height: parent.height;
        clicked => {
            GlobalSettings.current-page = page;
        }
    }

    HorizontalLayout {
        padding: 15px;
        alignment: space-between;
        label := Text {
            vertical-alignment: center;
            //color: background;
            font-size: GlobalSettings.FontSizeLarge;
        }

        icon := Image {
            width: 40px;
        }
    }
}

export component DashboardPage inherits Page {
    title: @tr("Dashboard");
    description: @tr("This page gives an overview of the default widget set provided by Slint. The widgets are available in different styles native, fluent-(dark/light) and material-(dark/light). The widgets can be imported from \"std-widgets.slint\".");

    VerticalLayout {
        HorizontalLayout {
            GridLayout {
                horizontal-stretch: 1;
                spacing: 10px;
                Row {
                    OverviewButton {
                        text: "Total:\n1000";
                        //icon: @image-url("../icons/circle-info.svg");
                        icon: @image-url("../icons/circle-check.svg");
                        icon_color: blue;
                    }

                    OverviewButton {
                        text: "Successful:\n100";
                        icon: @image-url("../icons/circle-check.svg");
                        icon_color: green;
                    }

                    OverviewButton {
                        text: "Failed:\n456";
                        //icon: @image-url("../icons/circle-xmark.svg");
                        icon: @image-url("../icons/circle-check.svg");
                        icon_color: red;
                    }
                }

                Row {
                    OverviewButton {
                        text: "Pending:\n10";
                        //icon: @image-url("../icons/hourglass-half.svg");
                        icon: @image-url("../icons/circle-stop.svg");
                        icon_color: gray;
                    }
                    OverviewButton {
                        text: "Stopped:\n123";
                        icon: @image-url("../icons/circle-stop.svg");
                        icon_color: blueviolet;
                    }
                    OverviewButton {
                        text: "Balance:\n" + GlobalSettings.balance + " â‚¬";
                        //icon: @image-url("../icons/credit-card.svg");
                        icon: @image-url("../icons/circle-stop.svg");
                        icon_color: darkblue;
                        page: 8;
                    }

                }
            }

            //Rectangle {  }
       }

        Rectangle {
            vertical-stretch: 0;
        }
    }
}
