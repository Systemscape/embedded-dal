import { Button, HorizontalBox, Switch } from "std-widgets.slint";

export component MainWindow inherits Window {
    title: "CO2 Monitor";
    min-width: 800px;
    min-height: 480px;
    background: white;
    property <bool> state: false;

    in property <int> co2_ppm: 9999;
    in property <color> background_color: gray;
    in property <string> status_text: "Status...";
    in property <string> in_progress: "";
    in property <int> time_since_last: 0;

    callback start_measurement();
    callback brightness_increase();
    callback brightness_decrease();
    callback force_compensation();

    border := Rectangle {
        width: 100%;
        height: 100%;
        background: background_color;
    }

    Rectangle {
        x: 50px;
        y: 50px;
        width: root.width - 2 * self.x;
        height: root.height - 2 * self.y;
        background: white;
    }

    co2text := Text {
        horizontal-alignment: center;
        text: co2_ppm;
        font-size: 280px;
    }

    Text {
        x: 60px;
        y: 400px;
        horizontal-alignment: left;
        text: status_text;
        font-size: 20px;
    }

    Text {
        x: 60px;
        y: 80px;
        horizontal-alignment: left;
        text: "Letzte Messung: " + time_since_last + " s";
        font-size: 20px;
    }

    // Currently unused. This won't render when set inside the measure_co2 function.
    in_progress_text := Text {
        x: 500px;
        y: 80px;
        text: in_progress;
        horizontal-alignment: left;
        font-size: 20px;
    }

    TouchArea {
        clicked => {
            debug("start_measurement()");
            root.start_measurement();
        }
    }

    HorizontalLayout {
        height: 60px;
        width: 150px;
        spacing: 20px;
        y: 360px;
        x: 590px;
        Button {
            text: "+";
            clicked => {
                brightness_increase();
                debug("brightness_increase()");
            }
        }

        Button {
            text: "--";
            clicked => {
                brightness_decrease();
                debug("brightness_decrease()");
            }
        }
    }

    Button {
        text: "FORCE COMP.";
        height: 50px;
        x: 600px;
        y: 70px;

        clicked => {
            force_compensation();
            debug("force_compensation()");
        }
    }
}
